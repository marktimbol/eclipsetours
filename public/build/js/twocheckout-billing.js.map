{"version":3,"sources":["twocheckout-billing.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"twocheckout-billing.js","sourcesContent":["\r\n// Called when token created successfully.\r\nvar successCallback = function(data) {\r\n    var billingForm = document.getElementById('billing-form');\r\n\r\n    // Set the token as the value for the token input\r\n    //billingForm.token.value = data.response.token.token;\r\n\r\n    $('<input>', {\r\n        type: 'hidden',\r\n        name: 'token',\r\n        value: data.response.token.token\r\n    }).appendTo(billingForm);\t        \r\n\r\n    // IMPORTANT: Here we call `submit()` on the form element directly instead of using jQuery to prevent and infinite token request loop.\r\n    billingForm.submit();\r\n};\r\n\r\n// Called when token creation fails.\r\nvar errorCallback = function(data) {\r\n    if (data.errorCode === 200) {tokenRequest();} else {alert(data.errorMsg);}\r\n};\r\n\r\nvar tokenRequest = function() {\r\n    // Setup token request arguments\r\n    var args = {\r\n        sellerId: $('meta[name=\"twocheckout-account-number\"]').attr('content'),\r\n        publishableKey: $('meta[name=\"twocheckout-public-key\"]').attr('content'),\r\n        ccNo: $(\"#cc-number\").val(),\r\n        cvv: $(\"#cvc\").val(),\r\n        expMonth: $(\"#expiryMonth\").val(),\r\n        expYear: $(\"#expiryYear\").val()\r\n    };\r\n\r\n    console.log(args);\r\n\r\n    // Make the token request\r\n    TCO.requestToken(successCallback, errorCallback, args);\r\n};\r\n\r\n$(function() {\r\n    // Pull in the public encryption key for our environment\r\n    TCO.loadPubKey('sandbox');\r\n\r\n    $(\"#billing-form\").submit(function(e) {\r\n        // Call our token request function\r\n        tokenRequest();\r\n\r\n        // Prevent form from submitting\r\n        return false;\r\n    });\r\n});"],"sourceRoot":"/source/"}